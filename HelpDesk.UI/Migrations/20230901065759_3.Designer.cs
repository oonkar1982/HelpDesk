// <auto-generated />
using System;
using HelpDesk.UI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpDesk.UI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230901065759_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HelpDesk.Common.Entities.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PrimaryContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PrimaryContactId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Incident", b =>
                {
                    b.Property<Guid>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActivitiesComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("CaseOriginCode")
                        .HasColumnType("int");

                    b.Property<int?>("CaseTypeCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExistingCase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OwnerIdType")
                        .HasColumnType("int");

                    b.Property<int?>("PriorityCode")
                        .HasColumnType("int");

                    b.Property<int>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("incidents");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.StringMap", b =>
                {
                    b.Property<Guid>("StringMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttributeValue")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectTypeCode")
                        .HasColumnType("int");

                    b.HasKey("StringMapId");

                    b.ToTable("map");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.UserDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Customer", b =>
                {
                    b.HasOne("HelpDesk.Common.Entities.UserDetail", "Owner")
                        .WithMany("Customers")
                        .HasForeignKey("OwnerId");

                    b.HasOne("HelpDesk.Common.Entities.Contact", "PrimaryContact")
                        .WithMany("Customers")
                        .HasForeignKey("PrimaryContactId");

                    b.Navigation("Owner");

                    b.Navigation("PrimaryContact");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Incident", b =>
                {
                    b.HasOne("HelpDesk.Common.Entities.Customer", "Customer")
                        .WithMany("Incidents")
                        .HasForeignKey("CustomerId");

                    b.HasOne("HelpDesk.Common.Entities.UserDetail", "Owner")
                        .WithMany("Incidents")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Customer");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.UserDetail", b =>
                {
                    b.HasOne("HelpDesk.Common.Entities.Company", "Company")
                        .WithMany("UserDetails")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Company", b =>
                {
                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Contact", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.Customer", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("HelpDesk.Common.Entities.UserDetail", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Incidents");
                });
#pragma warning restore 612, 618
        }
    }
}
